// Fibonacci numbers are generated by setting F0 = 0, F1 = 1, and then using the formula:

// Fn = Fn-1 + Fn-2
// Your task is to efficiently calculate the nth element in the Fibonacci sequence and then count the occurrence of each digit in the number. Return a list of integer pairs sorted in descending order.

// 10 ≤ n ≤ 100000


function fibDigits(n) {
    let n1 = 0, n2 = 1, next;
  
    for (let i = 1; i <= n; i++) {
      next = BigInt(n1 + n2);
      n1 = BigInt(n2);
      n2 = BigInt(next);
    }
    let arr = n1.toString().split(""), list = {}
    
    for (let e of arr) {
      if (list[e]) list[e] += 1
      else list[e] = 1
    }
    
    let res = Object.entries(list).map((e) => {return [e[1], parseInt(e[0])]})
    res.sort(function(a, b){return b[0] - a[0] || b[1] - a[1]})
    return res
  }